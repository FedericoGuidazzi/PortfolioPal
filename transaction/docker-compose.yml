services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - 8090:8090
    depends_on:
      rabbitmq:
        condition: service_healthy
      mysqldb:
        condition: service_healthy
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysqldb:3306/${MYSQL_DATABASE}
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=${MYSQL_PASSWORD}
      - SPRING_RABBITMQ_HOST=rabbitmq
    networks:
      - springboot-mysql-network
      - springboot-rabbitmq-network

  rabbitmq:
    image: rabbitmq:3.9-management
    ports:
      - 15672:15672
      - 5672:5672
    networks:
      - springboot-rabbitmq-network
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s

  mysqldb:
    image: mysql:8.0.33
    ports:
      - 3306:3306
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_ROOT_PASSWORD=${MYSQL_PASSWORD}
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - springboot-mysql-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      retries: 10
      interval: 3s
      timeout: 30s

volumes:
  mysql-data:
networks:
  springboot-mysql-network:
    name: springboot-mysql-network
  springboot-rabbitmq-network:
    name: springboot-rabbitmq-network
    driver: bridge
